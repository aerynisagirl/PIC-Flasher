

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Jan 08 11:28:43 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	10F320
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000F                     	;# 
    29  0010                     	;# 
    30  0011                     	;# 
    31  0012                     	;# 
    32  0013                     	;# 
    33  0014                     	;# 
    34  0015                     	;# 
    35  0016                     	;# 
    36  0016                     	;# 
    37  0017                     	;# 
    38  0018                     	;# 
    39  0019                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001D                     	;# 
    45  001E                     	;# 
    46  001F                     	;# 
    47  0020                     	;# 
    48  0020                     	;# 
    49  0021                     	;# 
    50  0022                     	;# 
    51  0022                     	;# 
    52  0023                     	;# 
    53  0024                     	;# 
    54  0025                     	;# 
    55  0026                     	;# 
    56  0027                     	;# 
    57  0027                     	;# 
    58  0028                     	;# 
    59  0029                     	;# 
    60  002A                     	;# 
    61  002A                     	;# 
    62  002B                     	;# 
    63  002C                     	;# 
    64  002D                     	;# 
    65  002E                     	;# 
    66  0030                     	;# 
    67  0031                     	;# 
    68  0032                     	;# 
    69  0033                     	;# 
    70  0034                     	;# 
    71  0035                     	;# 
    72  0036                     	;# 
    73  0037                     	;# 
    74  0038                     	;# 
    75  0039                     	;# 
    76  003A                     	;# 
    77  003B                     	;# 
    78  003C                     	;# 
    79  003D                     	;# 
    80  003E                     	;# 
    81  003F                     	;# 
    82                           
    83                           	psect	nvBANK0
    84  005A                     __pnvBANK0:	
    85  005A                     _flasherIncrement:	
    86  005A                     	ds	2
    87  005C                     _flasherSpeed:	
    88  005C                     	ds	2
    89  0010                     _OSCCON	set	16
    90  0005                     _PORTA	set	5
    91  0006                     _TRISA	set	6
    92                           
    93                           ; #config settings
    94  0000                     
    95                           	psect	cinit
    96  0001                     start_initialization:	
    97  0001                     __initialization:	
    98  0001                     end_of_initialization:	
    99                           ;End of C runtime variable initialization code
   100                           
   101  0001                     __end_of__initialization:	
   102  0001  0183               	clrf	3
   103  0002  28B2               	ljmp	_main	;jump to C main() function
   104                           
   105                           	psect	cstackCOMMON
   106  0000                     __pcstackCOMMON:	
   107  0000                     ??_setup:	
   108  0000                     ??_pause:	
   109                           ; 0 bytes @ 0x0
   110                           
   111  0000                     ??_main:	
   112                           ; 0 bytes @ 0x0
   113                           
   114                           
   115                           	psect	cstackBANK0
   116  0040                     __pcstackBANK0:	
   117                           ; 0 bytes @ 0x0
   118                           
   119  0040                     ?_setup:	
   120  0040                     ?_main:	
   121                           ; 0 bytes @ 0x0
   122                           
   123  0040                     ?___lldiv:	
   124                           ; 0 bytes @ 0x0
   125                           
   126  0040                     ___lldiv@divisor:	
   127                           ; 4 bytes @ 0x0
   128                           
   129                           
   130                           ; 4 bytes @ 0x0
   131  0040                     	ds	4
   132  0044                     ___lldiv@dividend:	
   133                           
   134                           ; 4 bytes @ 0x4
   135  0044                     	ds	4
   136  0048                     ??___lldiv:	
   137                           
   138                           ; 0 bytes @ 0x8
   139  0048                     	ds	1
   140  0049                     ___lldiv@quotient:	
   141                           
   142                           ; 4 bytes @ 0x9
   143  0049                     	ds	4
   144  004D                     ___lldiv@counter:	
   145                           
   146                           ; 1 bytes @ 0xD
   147  004D                     	ds	1
   148  004E                     ?_pause:	
   149  004E                     pause@delay:	
   150                           ; 0 bytes @ 0xE
   151                           
   152                           
   153                           ; 4 bytes @ 0xE
   154  004E                     	ds	4
   155  0052                     _pause$318:	
   156                           
   157                           ; 4 bytes @ 0x12
   158  0052                     	ds	4
   159  0056                     pause@cycles:	
   160                           
   161                           ; 4 bytes @ 0x16
   162  0056                     	ds	4
   163                           
   164                           	psect	maintext
   165  00B2                     __pmaintext:	
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   168 ;;
   169 ;; *************** function _main *****************
   170 ;; Defined at:
   171 ;;		line 72 in file "Main.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;		None
   176 ;; Return value:  Size  Location     Type
   177 ;;		None               void
   178 ;; Registers used:
   179 ;;		wreg, status,2, status,0, pclath, cstack
   180 ;; Tracked objects:
   181 ;;		On entry : B00/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMMON   BANK0
   185 ;;      Params:         0       0
   186 ;;      Locals:         0       0
   187 ;;      Temps:          0       0
   188 ;;      Totals:         0       0
   189 ;;Total ram usage:        0 bytes
   190 ;; Hardware stack levels required when called:    2
   191 ;; This function calls:
   192 ;;		_pause
   193 ;;		_setup
   194 ;; This function is called by:
   195 ;;		Startup code after reset
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           
   200                           ;psect for function _main
   201  00B2                     _main:	
   202                           
   203                           ;Main.c: 73: setup();
   204                           
   205                           ;incstack = 0
   206                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   207  00B2  20E3               	fcall	_setup
   208  00B3  28BA               	goto	l498
   209  00B4                     l510:	
   210                           
   211                           ;Main.c: 88: flasherIncrement += 10 * 2;
   212  00B4  3014               	movlw	20
   213  00B5  07DA               	addwf	_flasherIncrement,f
   214  00B6  1803               	skipnc
   215  00B7  0ADB               	incf	_flasherIncrement+1,f
   216  00B8  3000               	movlw	0
   217  00B9                     L1:	
   218  00B9  07DB               	addwf	_flasherIncrement+1,f
   219  00BA                     l498:	
   220                           ;Main.c: 76: while (1) {
   221                           
   222                           ;Main.c: 89: } else if (flasherSpeed == 2000) {
   223                           
   224                           
   225                           ;Main.c: 78: PORTA = 0x01;
   226  00BA  3001               	movlw	1
   227  00BB  0085               	movwf	5	;volatile
   228                           
   229                           ;Main.c: 79: pause(flasherSpeed);
   230  00BC  085C               	movf	_flasherSpeed,w
   231  00BD  00CE               	movwf	pause@delay
   232  00BE  085D               	movf	_flasherSpeed+1,w
   233  00BF  00CF               	movwf	pause@delay+1
   234  00C0  01D0               	clrf	pause@delay+2
   235  00C1  01D1               	clrf	pause@delay+3
   236  00C2  2061               	fcall	_pause
   237                           
   238                           ;Main.c: 80: PORTA = 0x00;
   239  00C3  0185               	clrf	5	;volatile
   240                           
   241                           ;Main.c: 81: pause(flasherSpeed);
   242  00C4  085C               	movf	_flasherSpeed,w
   243  00C5  00CE               	movwf	pause@delay
   244  00C6  085D               	movf	_flasherSpeed+1,w
   245  00C7  00CF               	movwf	pause@delay+1
   246  00C8  01D0               	clrf	pause@delay+2
   247  00C9  01D1               	clrf	pause@delay+3
   248  00CA  2061               	fcall	_pause
   249                           
   250                           ;Main.c: 84: flasherSpeed += flasherIncrement;
   251  00CB  085A               	movf	_flasherIncrement,w
   252  00CC  07DC               	addwf	_flasherSpeed,f
   253  00CD  1803               	skipnc
   254  00CE  0ADD               	incf	_flasherSpeed+1,f
   255  00CF  085B               	movf	_flasherIncrement+1,w
   256  00D0  07DD               	addwf	_flasherSpeed+1,f
   257                           
   258                           ;Main.c: 87: if (flasherSpeed == 250) {
   259  00D1  30FA               	movlw	250
   260  00D2  065C               	xorwf	_flasherSpeed,w
   261  00D3  045D               	iorwf	_flasherSpeed+1,w
   262  00D4  1903               	btfsc	3,2
   263  00D5  28B4               	goto	l510
   264  00D6  30D0               	movlw	208
   265  00D7  065C               	xorwf	_flasherSpeed,w
   266  00D8  3007               	movlw	7
   267  00D9  1903               	skipnz
   268  00DA  065D               	xorwf	_flasherSpeed+1,w
   269  00DB  1D03               	btfss	3,2
   270  00DC  28BA               	goto	l498
   271                           
   272                           ;Main.c: 90: flasherIncrement -= 10 * 2;
   273  00DD  30EC               	movlw	236
   274  00DE  07DA               	addwf	_flasherIncrement,f
   275  00DF  1803               	skipnc
   276  00E0  0ADB               	incf	_flasherIncrement+1,f
   277  00E1  30FF               	movlw	255
   278  00E2  28B9               	goto	L1
   279  00E3                     __end_of_main:	
   280                           
   281                           	psect	text1
   282  00E3                     __ptext1:	
   283 ;; *************** function _setup *****************
   284 ;; Defined at:
   285 ;;		line 49 in file "Main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;		None               void
   292 ;; Registers used:
   293 ;;		wreg
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0
   299 ;;      Params:         0       0
   300 ;;      Locals:         0       0
   301 ;;      Temps:          0       0
   302 ;;      Totals:         0       0
   303 ;;Total ram usage:        0 bytes
   304 ;; Hardware stack levels used:    1
   305 ;; This function calls:
   306 ;;		Nothing
   307 ;; This function is called by:
   308 ;;		_main
   309 ;; This function uses a non-reentrant model
   310 ;;
   311                           
   312                           
   313                           ;psect for function _setup
   314  00E3                     _setup:	
   315                           
   316                           ;Main.c: 51: OSCCON = 0x70;
   317                           
   318                           ;incstack = 0
   319                           ; Regs used in _setup: [wreg]
   320  00E3  3070               	movlw	112
   321  00E4  0090               	movwf	16	;volatile
   322                           
   323                           ;Main.c: 54: TRISA = 0x0E;
   324  00E5  300E               	movlw	14
   325  00E6  0086               	movwf	6	;volatile
   326                           
   327                           ;Main.c: 57: flasherSpeed = 250;
   328  00E7  30FA               	movlw	250
   329  00E8  00DC               	movwf	_flasherSpeed
   330  00E9  3000               	movlw	0
   331  00EA  00DD               	movwf	_flasherSpeed+1
   332                           
   333                           ;Main.c: 58: flasherIncrement = 10;
   334  00EB  300A               	movlw	10
   335  00EC  00DA               	movwf	_flasherIncrement
   336  00ED  3000               	movlw	0
   337  00EE  00DB               	movwf	_flasherIncrement+1
   338  00EF  0008               	return
   339  00F0                     __end_of_setup:	
   340                           
   341                           	psect	text2
   342  0061                     __ptext2:	
   343 ;; *************** function _pause *****************
   344 ;; Defined at:
   345 ;;		line 66 in file "Main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  delay           4   14[BANK0 ] unsigned long 
   348 ;; Auto vars:     Size  Location     Type
   349 ;;  cycles          4   22[BANK0 ] unsigned long 
   350 ;; Return value:  Size  Location     Type
   351 ;;		None               void
   352 ;; Registers used:
   353 ;;		wreg, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0
   359 ;;      Params:         0       4
   360 ;;      Locals:         0       8
   361 ;;      Temps:          0       0
   362 ;;      Totals:         0      12
   363 ;;Total ram usage:       12 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; Hardware stack levels required when called:    1
   366 ;; This function calls:
   367 ;;		___lldiv
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _pause
   375  0061                     _pause:	
   376                           
   377                           ;Main.c: 68: for (unsigned long cycles = 0; cycles < 16000000 / (1000000 / delay); cycle
      +                          s++);
   378                           
   379                           ;incstack = 0
   380                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
   381  0061  3000               	movlw	0
   382  0062  00D9               	movwf	pause@cycles+3
   383  0063  3000               	movlw	0
   384  0064  00D8               	movwf	pause@cycles+2
   385  0065  3000               	movlw	0
   386  0066  00D7               	movwf	pause@cycles+1
   387  0067  3000               	movlw	0
   388  0068  00D6               	movwf	pause@cycles
   389  0069                     l492:	
   390  0069  0851               	movf	pause@delay+3,w
   391  006A  00C3               	movwf	___lldiv@divisor+3
   392  006B  0850               	movf	pause@delay+2,w
   393  006C  00C2               	movwf	___lldiv@divisor+2
   394  006D  084F               	movf	pause@delay+1,w
   395  006E  00C1               	movwf	___lldiv@divisor+1
   396  006F  084E               	movf	pause@delay,w
   397  0070  00C0               	movwf	___lldiv@divisor
   398  0071  3000               	movlw	0
   399  0072  00C7               	movwf	___lldiv@dividend+3
   400  0073  300F               	movlw	15
   401  0074  00C6               	movwf	___lldiv@dividend+2
   402  0075  3042               	movlw	66
   403  0076  00C5               	movwf	___lldiv@dividend+1
   404  0077  3040               	movlw	64
   405  0078  00C4               	movwf	___lldiv@dividend
   406  0079  2003               	fcall	___lldiv
   407  007A  0843               	movf	?___lldiv+3,w
   408  007B  00D5               	movwf	_pause$318+3
   409  007C  0842               	movf	?___lldiv+2,w
   410  007D  00D4               	movwf	_pause$318+2
   411  007E  0841               	movf	?___lldiv+1,w
   412  007F  00D3               	movwf	_pause$318+1
   413  0080  0840               	movf	?___lldiv,w
   414  0081  00D2               	movwf	_pause$318
   415  0082  0855               	movf	_pause$318+3,w
   416  0083  00C3               	movwf	___lldiv@divisor+3
   417  0084  0854               	movf	_pause$318+2,w
   418  0085  00C2               	movwf	___lldiv@divisor+2
   419  0086  0853               	movf	_pause$318+1,w
   420  0087  00C1               	movwf	___lldiv@divisor+1
   421  0088  0852               	movf	_pause$318,w
   422  0089  00C0               	movwf	___lldiv@divisor
   423  008A  3000               	movlw	0
   424  008B  00C7               	movwf	___lldiv@dividend+3
   425  008C  30F4               	movlw	244
   426  008D  00C6               	movwf	___lldiv@dividend+2
   427  008E  3024               	movlw	36
   428  008F  00C5               	movwf	___lldiv@dividend+1
   429  0090  3000               	movlw	0
   430  0091  00C4               	movwf	___lldiv@dividend
   431  0092  2003               	fcall	___lldiv
   432  0093  0843               	movf	?___lldiv+3,w
   433  0094  0259               	subwf	pause@cycles+3,w
   434  0095  1D03               	skipz
   435  0096  28A1               	goto	u185
   436  0097  0842               	movf	?___lldiv+2,w
   437  0098  0258               	subwf	pause@cycles+2,w
   438  0099  1D03               	skipz
   439  009A  28A1               	goto	u185
   440  009B  0841               	movf	?___lldiv+1,w
   441  009C  0257               	subwf	pause@cycles+1,w
   442  009D  1D03               	skipz
   443  009E  28A1               	goto	u185
   444  009F  0840               	movf	?___lldiv,w
   445  00A0  0256               	subwf	pause@cycles,w
   446  00A1                     u185:	
   447  00A1  1803               	btfsc	3,0
   448  00A2  0008               	return
   449  00A3  3001               	movlw	1
   450  00A4  07D6               	addwf	pause@cycles,f
   451  00A5  3000               	movlw	0
   452  00A6  1803               	skipnc
   453  00A7  3001               	movlw	1
   454  00A8  07D7               	addwf	pause@cycles+1,f
   455  00A9  3000               	movlw	0
   456  00AA  1803               	skipnc
   457  00AB  3001               	movlw	1
   458  00AC  07D8               	addwf	pause@cycles+2,f
   459  00AD  3000               	movlw	0
   460  00AE  1803               	skipnc
   461  00AF  3001               	movlw	1
   462  00B0  07D9               	addwf	pause@cycles+3,f
   463  00B1  2869               	goto	l492
   464  00B2                     __end_of_pause:	
   465                           
   466                           	psect	text3
   467  0003                     __ptext3:	
   468 ;; *************** function ___lldiv *****************
   469 ;; Defined at:
   470 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  divisor         4    0[BANK0 ] unsigned long 
   473 ;;  dividend        4    4[BANK0 ] unsigned long 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  quotient        4    9[BANK0 ] unsigned long 
   476 ;;  counter         1   13[BANK0 ] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  4    0[BANK0 ] unsigned long 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0
   486 ;;      Params:         0       8
   487 ;;      Locals:         0       5
   488 ;;      Temps:          0       1
   489 ;;      Totals:         0      14
   490 ;;Total ram usage:       14 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_pause
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function ___lldiv
   501  0003                     ___lldiv:	
   502                           
   503                           ;incstack = 0
   504                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   505  0003  3000               	movlw	0
   506  0004  00CC               	movwf	___lldiv@quotient+3
   507  0005  3000               	movlw	0
   508  0006  00CB               	movwf	___lldiv@quotient+2
   509  0007  3000               	movlw	0
   510  0008  00CA               	movwf	___lldiv@quotient+1
   511  0009  3000               	movlw	0
   512  000A  00C9               	movwf	___lldiv@quotient
   513  000B  0843               	movf	___lldiv@divisor+3,w
   514  000C  0442               	iorwf	___lldiv@divisor+2,w
   515  000D  0441               	iorwf	___lldiv@divisor+1,w
   516  000E  0440               	iorwf	___lldiv@divisor,w
   517  000F  1903               	skipnz
   518  0010  2858               	goto	l482
   519  0011  01CD               	clrf	___lldiv@counter
   520  0012  0ACD               	incf	___lldiv@counter,f
   521  0013                     l468:	
   522  0013  1BC3               	btfsc	___lldiv@divisor+3,7
   523  0014  2823               	goto	l470
   524  0015  3001               	movlw	1
   525  0016  00C8               	movwf	??___lldiv
   526  0017                     u125:	
   527  0017  1003               	clrc
   528  0018  0DC0               	rlf	___lldiv@divisor,f
   529  0019  0DC1               	rlf	___lldiv@divisor+1,f
   530  001A  0DC2               	rlf	___lldiv@divisor+2,f
   531  001B  0DC3               	rlf	___lldiv@divisor+3,f
   532  001C  0BC8               	decfsz	??___lldiv,f
   533  001D  2817               	goto	u125
   534  001E  3001               	movlw	1
   535  001F  00C8               	movwf	??___lldiv
   536  0020  0848               	movf	??___lldiv,w
   537  0021  07CD               	addwf	___lldiv@counter,f
   538  0022  2813               	goto	l468
   539  0023                     l470:	
   540  0023  3001               	movlw	1
   541  0024  00C8               	movwf	??___lldiv
   542  0025                     u145:	
   543  0025  1003               	clrc
   544  0026  0DC9               	rlf	___lldiv@quotient,f
   545  0027  0DCA               	rlf	___lldiv@quotient+1,f
   546  0028  0DCB               	rlf	___lldiv@quotient+2,f
   547  0029  0DCC               	rlf	___lldiv@quotient+3,f
   548  002A  0BC8               	decfsz	??___lldiv,f
   549  002B  2825               	goto	u145
   550  002C  0843               	movf	___lldiv@divisor+3,w
   551  002D  0247               	subwf	___lldiv@dividend+3,w
   552  002E  1D03               	skipz
   553  002F  283A               	goto	u155
   554  0030  0842               	movf	___lldiv@divisor+2,w
   555  0031  0246               	subwf	___lldiv@dividend+2,w
   556  0032  1D03               	skipz
   557  0033  283A               	goto	u155
   558  0034  0841               	movf	___lldiv@divisor+1,w
   559  0035  0245               	subwf	___lldiv@dividend+1,w
   560  0036  1D03               	skipz
   561  0037  283A               	goto	u155
   562  0038  0840               	movf	___lldiv@divisor,w
   563  0039  0244               	subwf	___lldiv@dividend,w
   564  003A                     u155:	
   565  003A  1C03               	skipc
   566  003B  284B               	goto	l478
   567  003C  0840               	movf	___lldiv@divisor,w
   568  003D  02C4               	subwf	___lldiv@dividend,f
   569  003E  0841               	movf	___lldiv@divisor+1,w
   570  003F  1C03               	skipc
   571  0040  0F41               	incfsz	___lldiv@divisor+1,w
   572  0041  02C5               	subwf	___lldiv@dividend+1,f
   573  0042  0842               	movf	___lldiv@divisor+2,w
   574  0043  1C03               	skipc
   575  0044  0F42               	incfsz	___lldiv@divisor+2,w
   576  0045  02C6               	subwf	___lldiv@dividend+2,f
   577  0046  0843               	movf	___lldiv@divisor+3,w
   578  0047  1C03               	skipc
   579  0048  0F43               	incfsz	___lldiv@divisor+3,w
   580  0049  02C7               	subwf	___lldiv@dividend+3,f
   581  004A  1449               	bsf	___lldiv@quotient,0
   582  004B                     l478:	
   583  004B  3001               	movlw	1
   584  004C                     u165:	
   585  004C  1003               	clrc
   586  004D  0CC3               	rrf	___lldiv@divisor+3,f
   587  004E  0CC2               	rrf	___lldiv@divisor+2,f
   588  004F  0CC1               	rrf	___lldiv@divisor+1,f
   589  0050  0CC0               	rrf	___lldiv@divisor,f
   590  0051  3EFF               	addlw	-1
   591  0052  1D03               	skipz
   592  0053  284C               	goto	u165
   593  0054  3001               	movlw	1
   594  0055  02CD               	subwf	___lldiv@counter,f
   595  0056  1D03               	btfss	3,2
   596  0057  2823               	goto	l470
   597  0058                     l482:	
   598  0058  084C               	movf	___lldiv@quotient+3,w
   599  0059  00C3               	movwf	?___lldiv+3
   600  005A  084B               	movf	___lldiv@quotient+2,w
   601  005B  00C2               	movwf	?___lldiv+2
   602  005C  084A               	movf	___lldiv@quotient+1,w
   603  005D  00C1               	movwf	?___lldiv+1
   604  005E  0849               	movf	___lldiv@quotient,w
   605  005F  00C0               	movwf	?___lldiv
   606  0060  0008               	return
   607  0061                     __end_of___lldiv:	
   608  007E                     btemp	set	126	;btemp
   609  007E                     wtemp	set	126
   610  007E                     wtemp0	set	126
   611  0080                     wtemp1	set	128
   612  0082                     wtemp2	set	130
   613  0084                     wtemp3	set	132
   614  0086                     wtemp4	set	134
   615  0088                     wtemp5	set	136
   616  007F                     wtemp6	set	127
   617  007E                     ttemp	set	126
   618  007E                     ttemp0	set	126
   619  0081                     ttemp1	set	129
   620  0084                     ttemp2	set	132
   621  0087                     ttemp3	set	135
   622  007F                     ttemp4	set	127
   623  007E                     ltemp	set	126
   624  007E                     ltemp0	set	126
   625  0082                     ltemp1	set	130
   626  0086                     ltemp2	set	134
   627  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     26      30

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_pause
    _pause->___lldiv

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     549
                              _pause
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pause                                               12     8      4     549
                                             14 BANK0     12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _pause
     ___lldiv
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E     1A      1E       3       48.4%
ABS                  0      0      1E       4        0.0%
DATA                 0      0      1E       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Jan 08 11:28:43 2016

            __CFG_CP$OFF 0000                      l510 00B4                      l470 0023  
                    l482 0058                      l468 0013                      l492 0069  
                    l478 004B                      l498 00BA                      u125 0017  
                    u145 0025                      u155 003A                      u165 004C  
                    u185 00A1             __CFG_BORV$LO 0000             __CFG_LVP$OFF 0000  
           __CFG_WRT$OFF 0000                     _main 00B2                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E            __CFG_MCLRE$ON 0000  
          __CFG_LPBOR$ON 0000                    ?_main 0040            __CFG_WDTE$OFF 0000  
        __end_of___lldiv 0061                    _PORTA 0005                    _TRISA 0006  
                  _pause 0061                    _setup 00E3                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 0001             __end_of_main 00E3  
                 ??_main 0000                   ?_pause 004E                   ?_setup 0040  
                 _OSCCON 0010           __CFG_PWRTE$OFF 0000                ??___lldiv 0048  
__end_of__initialization 0001           __pcstackCOMMON 0000            __end_of_pause 00B2  
          __end_of_setup 00F0         _flasherIncrement 005A              pause@cycles 0056  
                ??_pause 0000                  ??_setup 0000               __pmaintext 00B2  
                ___lldiv 0003                  __ptext1 00E3                  __ptext2 0061  
                __ptext3 0003     end_of_initialization 0001             _flasherSpeed 005C  
        ___lldiv@divisor 0040          ___lldiv@counter 004D         __CFG_FOSC$INTOSC 0000  
    start_initialization 0001                ___latbits 0000            __pcstackBANK0 0040  
             pause@delay 004E                __pnvBANK0 005A                 ?___lldiv 0040  
              _pause$318 0052           __size_of_pause 0051           __size_of_setup 000D  
       __size_of___lldiv 005E            __size_of_main 0031         ___lldiv@dividend 0044  
       ___lldiv@quotient 0049  
